[common]
;API mode, set to true to prevent loading local subscriptions or serving local files directly
api_mode=false

;Access token used for performing critical action through Web interface
api_access_token=password

;Default URLs, used when no URL is provided in request, use "|" to separate multiple subscription links, supports local files/URL
default_url=

;Exclude nodes which remarks match the following patterns. Supports regular expression.
exclude_remarks=(到期|剩余流量|时间|官网|产品)
;exclude_remarks=(other rule)

;Only include nodes which remarks match the following patterns. Supports regular expression.
;include_remarks=V3.*港

;Clash config base used by the generator, supports local files/URL
clash_rule_base=https://raw.githubusercontent.com/KhaosChow/hosts/master/clash.yaml

;Surge config base used by the generator, supports local files/URL
;surge_rule_base=base/surge.conf

;Surfboard config base used by the generator, supports local files/URL
;surfboard_rule_base=base/surfboard.conf

;Mellow config base used by the generator, supports local files/URL
;mellow_rule_base=base/mellow.conf

;Quantumult X config base used by the generator, supports local files/URL
;quan_rule_base=base/quan.conf

;Quantumult X config base used by the generator, supports local files/URL
;quanx_rule_base=base/quanx.conf

;Proxy used to download rulesets or subscriptions, set to NONE or empty to disable it, set to SYSTEM to use system proxy.
;Accept cURL-supported proxies (http:// https:// socks4a:// socks5://)
proxy_ruleset=SYSTEM
proxy_subscription=NONE

;Append a proxy type string ([SS] [SSR] [VMess]) to node remark.
append_proxy_type=false

[userinfo]
;Rules to extract stream data from node
;Format: full_match_regex|new_format_regex
;where new_format_regex should be like "total=$1&left=$2&used=$3"
;stream_rule=^剩余流量：(.*?) (.*)$|total=$1&left=$2
;stream_rule=^Bandwidth: (.*?)/(.*)$|used=$1&total=$2
;stream_rule=^\[.*?\]剩余(.*?)@(?:.*)$|total=$1

;Rules to extract expire time data from node
;Format: full_match_regex|new_format_regex
;where new_format_regex should follow this example: yyyy:mm:dd:hh:mm:ss
;time_rule=^过期时间：(\d+)-(\d+)-(\d+) (\d+):(\d+):(\d+)$|$1:$2:$3:$4:$5:$6
;time_rule=^到期时间:(\d+)-(\d+)-(\d+)$|$1:$2:$3:0:0:0
;time_rule=^Smart Access expire: (\d+)/(\d+)/(\d+)$|$1:$2:$3:0:0:0

[node_pref]
udp_flag=false
tcp_fast_open_flag=false
sort_flag=false
skip_cert_verify_flag=false
filter_deprecated_nodes=false

;Rename remarks with the following patterns. Supports regular expression.
;Format: Search_Pattern@Replace_Pattern
;rename_node=IPLC@专线
;rename_node=RELAY@中转
;rename_node=BGP-@

;rename_node=!!import:snippets/rename_node.txt

[managed_config]
;Append a '#!MANAGED-CONFIG' info to Surge configurations
;write_managed_config=true

;Address prefix for MANAGED-CONFIG info, without the trailing "/".
;managed_config_prefix=http://127.0.0.1:25500

[surge_external_proxy]
;surge_ssr_path=/usr/bin/ssr-local

[emojis]
add_emoji=true
remove_old_emoji=true

;Rule to add emojis. Supports regular expression.
;Format: Remark_Search_Pattern,emoji

;rule=(流量|时间|应急|过期|Bandwidth|expire),🏳️‍🌈
;rule=AC,🇦🇨

;rule=!!import:snippets/emoji.txt
rule=(流量|时间|应急),🏳️‍🌈
rule=阿根廷,🇦🇷
rule=(奥地利|维也纳),🇦🇹
rule=(澳大利亚|悉尼),🇦🇺
rule=(巴西|圣保罗),🇧🇷
rule=(加拿大|蒙特利尔|温哥华),🇨🇦
rule=(瑞士|苏黎世),🇨🇭
rule=(中国|江苏|北京|上海|广州|深圳|杭州|徐州|青岛|宁波|镇江),🇨🇳
rule=(德|德国|法兰克福),🇩🇪
rule=(芬兰|赫尔辛基),🇫🇮
rule=(法国|巴黎),🇫🇷
rule=(英|伦敦),🇬🇧
rule=(港|香港|深港|沪港),🇭🇰
rule=(印尼|印度尼西亚|雅加达),🇮🇩
rule=(爱尔兰|都柏林),🇮🇪
rule=(印度|孟买),🇮🇳
rule=(意大利|米兰),🇮🇹
rule=(日|日本|东京|大阪|埼玉|沪日),🇯🇵
rule=朝鲜,🇰🇵
rule=(韩国|首尔),🇰🇷
rule=澳,🇲🇴
rule=马来西亚,🇲🇾
rule=(荷兰|阿姆斯特丹),🇳🇱
rule=菲律宾,🇵🇭
rule=罗马尼亚,🇷🇴
rule=(俄罗斯|伯力|莫斯科|圣彼得堡|西伯利亚|新西伯利亚),🇷🇺
rule=(新|新加坡|狮城),🇸🇬
rule=(泰国|曼谷),🇹🇭
rule=(土耳其|伊斯坦布尔),🇹🇷
rule=(台|台湾|台北|台中|新北|彰化),🇹🇼
rule=(美|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|沪美),🇺🇲
rule=越南,🇻🇳
rule=南非,🇿🇦

[ruleset]
;Enable generating rules with rulesets
enabled=true

;Overwrite the existing rules in rule_base
overwrite_original_rules=false

;Perform a ruleset update on request
update_ruleset_on_request=false

;Ruleset addresses, supports local files/URL
;Format: Group name,URL
;        Group name,[]Rule

;surge_ruleset=DIRECT,https://raw.githubusercontent.com/ConnersHua/Profiles/master/Surge/Ruleset/Unbreak.list
;surge_ruleset=🎯 全球直连,rules/LocalAreaNetwork.list
;surge_ruleset=🎯 全球直连,[]GEOIP,CN
;surge_ruleset=🐟 漏网之鱼,[]FINAL

;surge_ruleset=!!import:snippets/rulesets.txt
surge_ruleset=🌀 绕道而行,rules/LocalAreaNetwork.list
surge_ruleset=🌀 绕道而行,rules/NobyDa/Surge/Download.list
surge_ruleset=🌀 绕道而行,rules/ConnersHua/Surge/Ruleset/Unbreak.list
surge_ruleset=🌀 绕道而行,https://raw.githubusercontent.com/KhaosChow/hosts/master/direct.list
surge_ruleset=⛔ 全球拦截,rules/ACL4SSR/Clash/BanAD.list
surge_ruleset=🚩 应用拦截,rules/ACL4SSR/Clash/BanProgramAD.list
surge_ruleset=👁‍🗨 港台解锁,rules/ConnersHua/Surge/Ruleset/HKMTMedia.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/ChinaDomain.list
surge_ruleset=🍎 苹果服务,rules/ACL4SSR/Clash/Apple.list
surge_ruleset=Ⓜ️ 微软服务,rules/ACL4SSR/Clash/Microsoft.list
surge_ruleset=📲 电报信息,rules/ConnersHua/Surge/Ruleset/Telegram.list
surge_ruleset=🕊️ 国外社交,https://raw.githubusercontent.com/KhaosChow/hosts/master/globalsocial.list
surge_ruleset=🎥 国外媒体,rules/ConnersHua/Surge/Ruleset/GlobalMedia.list
surge_ruleset=🔰 节点选择,https://raw.githubusercontent.com/KhaosChow/hosts/master/global.list
surge_ruleset=🌼 查缺补漏,https://raw.githubusercontent.com/KhaosChow/hosts/master/proxy.list
surge_ruleset=🎯 全球直连,rules/ACL4SSR/Clash/ChinaCompanyIp.list
surge_ruleset=🎯 全球直连,[]GEOIP,CN
surge_ruleset=🐟 漏网之鱼,[]FINAL

[clash_proxy_group]
;Generate Clash Proxy Group with the following patterns. Node filterting rule supports regular expression.
;Format: Group_Name`select`Rule_1`Rule_2`...
;        Group_Name`url-test|fallback|load-balance`Rule_1`Rule_2`...`test_url`interval
;Rule with "[]" prefix will be added directly.

;custom_proxy_group=Proxy`select`.*`[]AUTO`[]DIRECT`.*
;custom_proxy_group=UrlTest`url-test`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=FallBack`fallback`.*`http://www.gstatic.com/generate_204`300
;custom_proxy_group=LoadBalance`load-balance`.*`http://www.gstatic.com/generate_204`300

;custom_proxy_group=g1`select`!!GROUPID=0
;custom_proxy_group=g2`select`!!GROUPID=1
;custom_proxy_group=v2ray`select`!!GROUP=V2RayProvider

;custom_proxy_group=g1hk`select`!!GROUPID=0!!(HGC|HKBN|PCCW|HKT|hk|港)
;custom_proxy_group=sstw`select`!!GROUP=V2RayProvider!!(深台|彰化|新北|台|tw)

;for forcerule.yml
;custom_proxy_group=!!import:snippets/groups_forcerule.txt

;for Surge rulesets
;custom_proxy_group=!!import:snippets/groups.txt
custom_proxy_group=🔰 节点选择`select`[]✈ 手动选择`[]✈ 延迟最低`[]✈ 故障切换`[]🚀 中转节点`[]🚀 进阶节点`[]🚀 基础节点`[]🇭🇰 香港节点`[]🇹🇼 台湾节点`[]🇸🇬 狮城节点`[]🇯🇵 日本节点`[]🇺🇲 美国节点`[]DIRECT
custom_proxy_group=🕊️ 国外社交`select`[]✈ 手动选择`[]🔰 节点选择`[]✈ 延迟最低`[]✈ 故障切换`[]DIRECT
custom_proxy_group=📲 电报信息`select`[]🔰 节点选择`[]✈ 手动选择`[]✈ 延迟最低`[]✈ 故障切换`[]🇸🇬 狮城节点`[]DIRECT
custom_proxy_group=🎥 国外媒体`select`[]🔰 节点选择`[]✈ 手动选择`[]✈ 延迟最低`[]✈ 故障切换`[]DIRECT`[]📺 NETFLIX
custom_proxy_group=🌼 查缺补漏`select`[]🔰 节点选择`[]✈ 手动选择`[]✈ 延迟最低`[]✈ 故障切换`[]DIRECT
custom_proxy_group=⛔ 全球拦截`select`[]REJECT`[]DIRECT`[]🔰 节点选择
custom_proxy_group=🚩 应用拦截`select`[]REJECT`[]DIRECT`[]🔰 节点选择
custom_proxy_group=👁‍🗨 港台解锁`select`[]DIRECT`[]🔰 节点选择`[]✈ 手动选择`[]🇭🇰 香港节点`[]🇹🇼 台湾节点
custom_proxy_group=🍎 苹果服务`select`[]DIRECT`[]🔰 节点选择`[]✈ 手动选择
custom_proxy_group=Ⓜ️ 微软服务`select`[]DIRECT`[]🔰 节点选择`[]✈ 手动选择
custom_proxy_group=🎯 全球直连`select`[]DIRECT`[]🔰 节点选择`[]✈ 手动选择
custom_proxy_group=🌀 绕道而行`select`[]DIRECT`[]✈ 手动选择`[]🔰 节点选择
custom_proxy_group=🐟 漏网之鱼`select`[]🔰 节点选择`[]✈ 手动选择`[]✈ 延迟最低`[]✈ 故障切换`[]DIRECT
custom_proxy_group=✈ 手动选择`select`.*
custom_proxy_group=✈ 延迟最低`url-test`^((?!(回国|续费)).)*$`http://www.gstatic.com/generate_204`600
custom_proxy_group=✈ 故障切换`fallback`^((?!(回国|续费)).)*$`http://www.gstatic.com/generate_204`600
custom_proxy_group=📺 NETFLIX`select`(NF|解锁|Netflix|NETFLIX)
custom_proxy_group=🚀 基础节点`url-test`^((?!回国).)*Basic((?!回国).)*$`http://www.gstatic.com/generate_204`600
custom_proxy_group=🚀 进阶节点`url-test`^((?!回国).)*Advanced((?!回国).)*$`http://www.gstatic.com/generate_204`600
custom_proxy_group=🚀 中转节点`url-test`(沪|广|深|中继|中转|专线)`http://www.gstatic.com/generate_204`600
custom_proxy_group=🇭🇰 香港节点`select`(港|HK|HONG|Hong|HGC)
custom_proxy_group=🇹🇼 台湾节点`select`(台|新北|彰化|TW)
custom_proxy_group=🇸🇬 狮城节点`select`(新|狮城|SG)
custom_proxy_group=🇯🇵 日本节点`select`(日|东京|大阪|埼玉|JP)
custom_proxy_group=🇺🇲 美国节点`select`(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US)

[server]
;Address to bind on for Web Server
listen=0.0.0.0

;Port to bind on for Web Server
port=25500

[advanced]
print_debug_info=false
max_pending_connections=10240
max_concurrent_threads=4
